<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="memberMapper">
    <resultMap id="member" type="com.easyfolio.esf.member.vo.MemberVO">
        <id column="MEMBER_ID"      property="memberId" />
        <result column="MEMBER_PW"      property="memberPw" />
        <result column="MEMBER_NAME"    property="memberName" />
        <result column="MEMBER_TEL"    property="memberTel" />
        <result column="MEMBER_GENDER"  property="memberGender"/>
        <result column="MEMBER_ROLE"    property="memberRole"/>
        <result column="NICKNAME"    property="nickName"/>
        <result column="ALAM_CNT"    property="alamCnt"/>
    </resultMap>

    <resultMap id="alarm" type="com.easyfolio.esf.member.vo.AlarmVO">
        <id column="ALARM_CODE"      property="alarmCode" />
        <result column="RECIVE_MEMBER_ID"      property="reciveMemberId" />
        <result column="SEND_MEMBER_ID"      property="sendMemberId" />
        <result column="FOOD_CODE"    property="foodCode" />
        <result column="FOOD_COMMENT_ID"    property="foodCommentId" />
        <result column="ALARM_TYPE"    property="alarmType" />
        <result column="ALARM_CHECK"    property="alarmCheck" />
        <result column="CONTENT"    property="content" />
        <result column="REG_DATE"    property="regDate" />
        <result column="MEMBER_NAME"    property="memberName" />
    </resultMap>

    <insert id="join">
        INSERT INTO DISH_MEMBER (
        MEMBER_ID
        , MEMBER_PW
        , MEMBER_NAME
        , MEMBER_TEL
        , MEMBER_GENDER
        ) VALUES (
        #{memberId}
        , #{memberPw}
        , #{memberName}
        , #{memberTel}
        , #{memberGender}
        )
    </insert>
<!--로그인-->
    <select id="login" resultMap="member">
        SELECT MEMBER_ID
        , MEMBER_PW
        , MEMBER_ROLE
        FROM DISH_MEMBER
        WHERE MEMBER_ID = #{memberId}

    </select>

<!--    아이디 중복확인-->
    <select id="checkId" resultType="String">
        SELECT MEMBER_ID
        FROM DISH_MEMBER
        WHERE MEMBER_ID = #{memberId}
    </select>

<!--    아이디 찾기-->
    <select id ="findId" resultMap="member">
        SELECT MEMBER_ID
        FROM DISH_MEMBER
        WHERE MEMBER_NAME = #{memberName}
        AND MEMBER_TEL = #{memberTel}
    </select>

    <!-- 패스워드 찾기-->
    <select id ="findPw" resultMap="member">
        SELECT MEMBER_ID
        FROM DISH_MEMBER
        WHERE MEMBER_ID = #{memberId}
        AND MEMBER_TEL = #{memberTel}
    </select>

    <select id="selectMemberInfo" resultMap="member">
        SELECT
        , FOOD_NAME
        FROM DISH_MEMBER
        WHERE MEMBER_ID = #{memberId}
    </select>

    <update id="alarmCntPlus">
        UPDATE DISH_MEMBER
        SET ALAM_CNT = ALAM_CNT + 1
        WHERE MEMBER_ID = #{memberId}
    </update>

    <update id="alarmCntMinus">
        UPDATE DISH_MEMBER
        SET ALAM_CNT = ALAM_CNT - 1
        WHERE MEMBER_ID = #{memberId}
    </update>

    <insert id="insertAlarm">
        INSERT INTO ALARM (
        ALARM_CODE,
        RECIVE_MEMBER_ID,
        SEND_MEMBER_ID,
        FOOD_CODE,
        FOOD_COMMENT_ID,
        ALARM_TYPE
        ) VALUES (
        (SELECT 'ALARM_' || LPAD(NVL(MAX(TO_NUMBER(SUBSTR(ALARM_CODE, 7))), 0) + 1, 5, '0') FROM ALARM),
        #{reciveMemberId},
        #{sendMemberId},
        #{foodCode},
        #{foodCommentId},
        <if test="foodCommentId != null and not foodCommentId.isEmpty()">
            'C'
        </if>
        <if test="foodCommentId == null and foodCommentId.isEmpty()">
            'L'
        </if>
        )
    </insert>

    <select id="alarmList" resultMap="alarm">
        SELECT DISTINCT D.MEMBER_NAME
        , C.CONTENT
        , TO_CHAR(C.REG_DATE, 'YY-MM-DD HH24:MI') AS REG_DATE
        , A.FOOD_CODE
        , A.ALARM_TYPE
        , A.ALARM_CODE
        , A.ALARM_CHECK
        , A.FOOD_COMMENT_ID
        , A.SEND_MEMBER_ID
        , TO_CHAR(C.REG_DATE, 'YY-MM-DD HH24:MI:SS') AS DESC_REG_DATE
        FROM ALARM A, FOOD_COMMENT C, DISH_MEMBER D
        WHERE A.RECIVE_MEMBER_ID = #{memberId}
        AND C.FOOD_COMMENT_ID = A.FOOD_COMMENT_ID
        AND D.MEMBER_ID = A.SEND_MEMBER_ID
        ORDER BY DESC_REG_DATE DESC
    </select>

    <update id="updateAlarm">
        UPDATE ALARM
        SET ALARM_CHECK = 'Y'
        WHERE ALARM_CODE = #{alarmCode}
    </update>

    <delete id="deleteAlarmAll">
        DELETE FROM ALARM
        WHERE RECIVE_MEMBER_ID = #{memberId}
    </delete>

    <delete id="deleteAlarm">
        DELETE FROM ALARM
        WHERE ALARM_CODE = #{alarmCode}
    </delete>
<!--알람 카운트-->
    <select id="alarmCount" resultType="int">
        SELECT COUNT(*)
        FROM ALARM
        WHERE ALARM_CHECK = 'N'
        AND RECIVE_MEMBER_ID = #{reciveMemberId}
    </select>
</mapper>