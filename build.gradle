plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.easyfolio'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6' //타임리프 시큐리티 -- 시큐리티 태그 사용
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16' //쿼리 로그 라이브러리 추가
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect' //fragment 사용을 위해 추가
	compileOnly("org.springframework.boot:spring-boot-devtools") //html새로고침
	implementation 'org.springframework.boot:spring-boot-starter-jdbc' // oracle jdbc
	implementation group: 'com.oracle.database.jdbc', name: 'ojdbc6', version: '11.2.0.4'
	implementation 'org.json:json:20220320'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'


	implementation 'com.google.code.gson:gson:2.8.9' //json 사용(gson)

	// https://mvnrepository.com/artifact/org.jsoup/jsoup
	implementation group: 'org.jsoup', name: 'jsoup', version: '1.17.2'

	implementation 'com.theokanning.openai-gpt3-java:service:0.18.2'
	implementation 'dev.langchain4j:langchain4j-open-ai:0.30.0' // openai에서 랭체인 기술을 사용하기 위한 종속성 - kwon

	implementation 'org.springframework.boot:spring-boot-starter-websocket' // 웹소캣

}
tasks.named('test') {
	useJUnitPlatform()
}
tasks.withType(JavaCompile){
	options.encoding = "UTF-8"
}

